// Plugins et configuration Java
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

// Set explicit encoding
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.withType(Test) {
	systemProperty 'file.encoding', 'UTF-8'
}

// Repositories
repositories {
	mavenCentral()
}

// Configurations pour DevTools
configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

// Dépendances (tout regroupé dans un seul bloc)
dependencies {
	// Web + Validation
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // --- Dépendances pour Spring Integration et MQTT ---
    // Module principal qui contient IntegrationFlows et le Java DSL
    implementation 'org.springframework.integration:spring-integration-core'
    // Module spécifique pour MQTT
    implementation 'org.springframework.integration:spring-integration-mqtt'
    // Le client Paho, implémentation du protocole MQTT
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'

    // --- Autres Dépendances ---
    implementation 'com.google.firebase:firebase-admin:9.3.0'
    implementation 'org.json:json:20230227'

    // --- Développement et Test ---
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Tâches de tests
tasks.named('test') {
	useJUnitPlatform()
}
